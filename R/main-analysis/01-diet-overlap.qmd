---
title: "Diet (dis)-similarity"
author: "Max Lindmark"
date: today
date-format: iso
toc: true
format: 
  html:
    page-layout: full
    embed-resources: true
knitr: 
  opts_chunk:
    fig.align: center
    out-width: 100%
editor: source
---

## Load packages

```{r load libraries}
#| message: false
#| warning: false

home <- here::here()

# Load libraries
library(tidyverse)
library(tidylog)
library(RCurl)
library(gllvm)
library(RColorBrewer)
library(ggrepel)
library(vegan)
library(patchwork)
library(RCurl)
library(devtools)

# Source map-plot
source_url("https://raw.githubusercontent.com/maxlindmark/cod-interactions/main/R/functions/map-plot.R")
#source(paste0(home, "R/functions/map-plot.R"))

# Source code for rotating ordination plot (to make it work in ggplot)
source_url("https://raw.githubusercontent.com/maxlindmark/cod-interactions/main/R/functions/rotate.R")
#source(paste0(home, "R/functions/rotate.R"))
```

## Read data

```{r read data}
#| warning=FALSE
d <- read_csv(paste0(home, "/data/clean/aggregated_stomach_data.csv"))
```

## Ordination using `gllvm`

```{r}
d2 <- d %>%
  dplyr::select(ends_with("_tot"))

d2$pred_id <- d$pred_id

d2 <- d2 %>%
  left_join(d %>% dplyr::select(pred_length_cm, pred_weight_g, pred_id, species), by = "pred_id")

# Calculate relative prey weight and average by size-class
d3 <- d2 %>% 
  pivot_longer(ends_with("_tot")) %>% 
  mutate(value = value/pred_weight_g) %>% 
  filter(pred_length_cm > 10 & pred_length_cm < 50) %>% # These are the sizes we work with
  filter(value < quantile(value, probs = 0.95)) %>% 
  group_by(species, pred_length_cm, name) %>% 
  summarise(tot_prey_weight = mean(value)) %>%
  ungroup() %>% 
  mutate(name = str_replace(name, "_", " "),
         name = str_replace(name, "_", " "),
         name = str_remove(name, " tot"),
         name = str_to_title(name))
  
d_wide <- d3 %>% pivot_wider(names_from = name, values_from = tot_prey_weight)

d_mat <- d_wide %>%
  dplyr::select(-species, -pred_length_cm) %>%
  as.matrix()

# Fit gllvm model with two latend variables and no covariates, meaning it becomes an ordination
set.seed(999)

fit <- gllvm(y = d_mat, family = "tweedie", num.lv = 2)

fit

# Let's do a ggplot-residual instead
res <- residuals(fit)
p <- NCOL(fit$y)
sppind <- 1:p
ds_res <- res$residuals[, sppind]

# Compare with built-in plot from gllvm: plot(fit, which = 2)
ds_res %>% 
  as.data.frame() %>% 
  pivot_longer(cols = everything()) %>% 
  ggplot(aes(sample = value)) + 
  geom_qq(size = 0.8) + 
  geom_qq_line() + 
  labs(y = "Sample quantiles",
       x = "Theoretical quantiles")

ggsave(paste0(home, "/figures/supp/qq_ordi_gllvm.pdf"), width = 11, height = 11, units = "cm")

# Plot with GGplot
# Now make the ordination plot. We want to use ggplot, so need to hack it a bit
# See this thread: https://github.com/JenniNiku/gllvm/discussions/116
# ordiplot(fit, biplot = TRUE)

# Extract site scores
LVs = as.data.frame(getLV(fit))

# Bind LV site scores to metadata
# LVs = cbind(LVs, sim.meta)
# 
# ordiplot(fittw, biplot = TRUE)
# 
# ordiplot(fittw, biplot = TRUE, symbols = TRUE, spp.colors = "white")
# 
LVs2 <- rotate(fit)

# text?
labs <- LVs2$species %>%
  as.data.frame() %>% 
  rownames_to_column(var = "prey")

dd <- LVs2$sites %>%
  as.data.frame() %>% 
  bind_cols(d_wide %>% dplyr::select(species, pred_length_cm)) %>% 
  mutate(group = "Flounder",
         group = ifelse(species == "Cod" & pred_length_cm <=  25, "Small cod", group),
         group = ifelse(species == "Cod" & pred_length_cm > 25, "Large cod", group))

# Alternative palettes for the groups
pal <- (brewer.pal(n = 11, name = "RdYlBu")[c(11, 4, 1)])
#pal <- (brewer.pal(n = 11, name = "RdYlGn")[c(11, 4, 1)])
#pal <- (brewer.pal(n = 8, name = "Dark2")[c(8, 7, 6)])
#pal <- brewer.pal(n = 8, name = "Dark2")[c(2, 7, 6)]

ordi <- ggplot(dd, aes(x = V1, y = V2, color = factor(group, levels = c("Flounder", "Small cod", "Large cod")),
                       size = pred_length_cm)) +
  geom_point(alpha = 0.6) + 
  # stat_ellipse(aes(V1, V2, color = group), 
  #              inherit.aes = FALSE, linewidth = 1, alpha = 0.3) + 
  scale_size_continuous(range = c(0.7, 3)) +
  scale_color_manual(values = pal) +
  scale_fill_manual(values = pal) + 
  labs(size = "Predator length [cm]", shape = "Species", color = "Group", fill = "Group",
       x = "Latent variable 1", y = "Latent variable 2") +
  geom_label(box.padding = 0, data = labs, aes(V1, V2, label = prey),
             color = "black", inherit.aes = FALSE, size = 2, alpha = 0.4) +
  theme_sleek() +
  coord_cartesian(xlim = c(-2, 2.5), ylim = c(-2.5, 2)) + 
  theme(legend.position = "bottom")

ordi
```

## Make a plot of the ontogenetic development of diets

```{r}
# Calculate relative prey weight and average by size-class
d3 <- d2 %>% 
  pivot_longer(ends_with("_tot")) %>% 
  mutate(value = value/pred_weight_g) %>% 
  group_by(species, pred_length_cm, name) %>% 
  summarise(tot_prey_weight = mean(value)) %>%
  ungroup() %>% 
  mutate(name = str_replace(name, "_", " "),
         name = str_replace(name, "_", " "),
         name = str_remove(name, " tot"),
         name = str_to_title(name)) %>% 
  filter(tot_prey_weight < quantile(tot_prey_weight, probs = 0.995))

max_size_cod <- 65

cod_important_prey <- d3 %>%
  filter(species == "Cod") %>% 
  mutate(pred_length_cm2 = ifelse(pred_length_cm > max_size_cod, max_size_cod -1, pred_length_cm)) %>% 
  mutate(predator_length_grp = cut(pred_length_cm2, breaks = seq(0, 100, by = 5))) %>% 
  group_by(name, predator_length_grp) %>%
  summarise(prey_group_tot = sum(tot_prey_weight)) %>% 
  ungroup() %>% 
  group_by(predator_length_grp) %>% 
  mutate(prop = prey_group_tot / sum(prey_group_tot)) %>% 
  ungroup() %>%
  mutate(max_size = as.numeric(substr(predator_length_grp, 5, 6)),
         max_size = ifelse(predator_length_grp == "(0,5]", 5, max_size),
         max_size = ifelse(predator_length_grp == "(5,10]", 10, max_size),
         predator = "Cod")

max_size_fle <- 40

fle_important_prey <- d3 %>%
  filter(species == "Flounder") %>% 
  mutate(pred_length_cm2 = ifelse(pred_length_cm > max_size_fle, max_size_fle-1, pred_length_cm)) %>% 
  mutate(predator_length_grp = cut(pred_length_cm2, breaks = seq(0, 100, by = 5))) %>% 
  group_by(name, predator_length_grp) %>%
  summarise(prey_group_tot = sum(tot_prey_weight)) %>% 
  ungroup() %>% 
  group_by(predator_length_grp) %>% 
  mutate(prop = prey_group_tot / sum(prey_group_tot)) %>% 
  ungroup() %>%
  mutate(max_size = as.numeric(substr(predator_length_grp, 5, 6)),
         max_size = ifelse(predator_length_grp == "(0,5]", 5, max_size),
         max_size = ifelse(predator_length_grp == "(5,10]", 10, max_size),
         predator = "Flounder")

area_plot <- bind_rows(fle_important_prey, cod_important_prey) %>% 
  mutate(prop = replace_na(prop, 0))

n_cat <- nrow(area_plot %>% distinct(name))
colourCount <- n_cat
getPalette <- colorRampPalette(brewer.pal(12, "Paired"))
pal2 <- getPalette(colourCount)

area_plot %>% distinct(name)

# Dataframes for geom_text with sample size
n_cod <- d2 %>%
  filter(species == "Cod") %>% 
  mutate(pred_length_cm2 = ifelse(pred_length_cm > max_size_cod, max_size_cod -1, pred_length_cm)) %>% 
  mutate(predator_length_grp = cut(pred_length_cm2, breaks = seq(0, 100, by = 5))) %>% 
  group_by(predator_length_grp) %>%
  summarise(n = length(unique(pred_id)))

n_fle <- d2 %>%
  filter(species == "Flounder") %>% 
  mutate(pred_length_cm2 = ifelse(pred_length_cm > max_size_fle, max_size_fle-1, pred_length_cm)) %>% 
  mutate(predator_length_grp = cut(pred_length_cm2, breaks = seq(0, 100, by = 5))) %>% 
  group_by(predator_length_grp) %>%
  summarise(n = length(unique(pred_id)))

n_dat <- bind_rows(n_cod %>% mutate(predator = "Cod"), 
                   n_fle %>% mutate(predator = "Flounder")) %>% 
  mutate(max_size = as.numeric(substr(predator_length_grp, 5, 6)),
         max_size = ifelse(predator_length_grp == "(0,5]", 5, max_size),
         max_size = ifelse(predator_length_grp == "(5,10]", 10, max_size))


bar_diet <- 
  ggplot(data = area_plot, aes(x = max_size, y = prop, fill = name, color = name)) +
  geom_col(width = 4.3) +
  geom_text(data = n_dat, aes(x = max_size, y = 1.08, label = n), inherit.aes = FALSE,
            size = 0, color = "white") +
  geom_text(data = n_dat, aes(x = max_size, y = 1.04, label = n), inherit.aes = FALSE,
            size = 2) +
  facet_wrap(~predator, scales = "free") +
  scale_fill_manual(values = pal2, name = "") +
  scale_color_manual(values = pal2, name = "") +
  coord_cartesian(expand = 0) +
  scale_x_continuous(breaks = seq(0, 100, 5)) +
  labs(y = "Proportion", x = "Max. predator size in group [cm]") +
  theme(legend.key.size = unit(0.2, 'cm'),
        legend.position = "bottom")
```

## Combine plots

```{r}
#| fig-height: 8

bar_diet / ordi + plot_annotation(tag_levels = "A") + plot_layout(heights = c(1, 1.6))

ggsave(paste0(home, "/figures/ordi_diet.pdf"), width = 17, height = 20, units = "cm")
```
